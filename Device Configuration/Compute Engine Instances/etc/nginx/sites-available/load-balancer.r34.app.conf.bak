upstream r34apis {
	server 127.0.0.1:22000;
	server 127.0.0.1:22001;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name load-balancer.r34.app;

	# SSL
	ssl_certificate /etc/letsencrypt/live/load-balancer.r34.app/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/load-balancer.r34.app/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/load-balancer.r34.app/chain.pem;

	# security
	include nginxconfig.io/security.conf;

	# reverse proxy
	location / {
		proxy_ssl_server_name on;
		proxy_pass http://r34apis;
	}

	# additional config
	include nginxconfig.io/general.conf;
}

# APIs
server {
		listen 22000;

		location / {
				proxy_set_header HOST r34-app-original-api-1.herokuapp.com;
				proxy_pass https://r34-app-original-api-1.herokuapp.com;
		}
}

server {
		listen 22001;

		location / {
				proxy_set_header HOST r34-app-original-api.herokuapp.com;
				proxy_pass https://r34-app-original-api.herokuapp.com;
		}
}

# subdomains redirect
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name *.load-balancer.r34.app;

	# SSL
	ssl_certificate /etc/letsencrypt/live/load-balancer.r34.app/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/load-balancer.r34.app/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/load-balancer.r34.app/chain.pem;

	return 301 https://load-balancer.r34.app$request_uri;
}

# HTTP redirect
server {
	listen 80;
	listen [::]:80;

	server_name .load-balancer.r34.app;

	include nginxconfig.io/letsencrypt.conf;

	location / {
		return 301 https://load-balancer.r34.app$request_uri;
	}
}
